#!/bin/bash

WORLDDIR="./worlds"
LOCALVERSION=`ls server 2>/dev/null`
if [ -z "$LOCALVERSION" ]; then
  LOCALVERSION="0"
fi

errecho() {
  echo "$@" 1>&2;
}

error() {
  printf "\n"
  errecho "  $1"
}

start() {
  if [ ! -d "$WORLDDIR/$1" ]; then
    error "World not found"
    return 1
  fi
  return 0
}

stop() {
  return 0
}

update() {
  DOWNLOAD=`curl -s "https://terraria.gamepedia.com/Server" | perl -pe 's/\n//' | sed 's|.*\(https*://terraria.org/server/.*\.zip\).*|\1|'`
  REMOTEVERSION=`echo "$DOWNLOAD" | sed 's|.*-\([0-9]*\).zip$|\1|'`

  if [ "$REMOTEVERSION" -gt "$LOCALVERSION" ]; then
    rm -rf "server"
    curl -so "server.zip" "$DOWNLOAD"
    unzip -q "server.zip" -d "server"
    rm -f "server.zip"
    LOCALVERSION=`ls server`
  fi
}

create() {
  if [ -e "$WORLDDIR/$1" ]; then
    error "World already exists"
    return 1
  fi

  mkdir -p "$WORLDDIR/$1"
  cp "defaultserverconfig.txt" "$WORLDDIR/$1/serverconfig.txt"
  sed -i "s/^\s*#*\s*\(autocreate\s*=\s*\).*$/\1$2/" "$WORLDDIR/$1/serverconfig.txt"
  sed -i "s/^\s*#*\s*\(difficulty\s*=\s*\).*$/\1$3/" "$WORLDDIR/$1/serverconfig.txt"
  sed -i "s/^\s*#*\s*\(port\s*=\s*\).*$/\1$4/" "$WORLDDIR/$1/serverconfig.txt"
}

getworlds() {
  if [ -z "$1" ]; then
    ls "$WORLDDIR" 2>/dev/null
  else
    echo "$1"
  fi
}

case "$1" in

  start)
    FAILED="true"
    for WORLD in `getworlds "$2"`; do
      if $FAILED; then
        printf "Starting world: "
        FAILED="false"
      fi
      printf "$WORLD "
      if ! start "$WORLD"; then
        FAILED="true"
      fi
    done
    if ! $FAILED; then
      printf "\n"
    fi
  ;;

  stop)
    FAILED="true"
    for WORLD in `getworlds "$2"`; do
      if $FAILED; then
        printf "Stopping world: "
        FAILED="false"
      fi
      printf "$WORLD "
      if ! stop "$WORLD"; then
        FAILED="true"
      fi
    done
    if ! $FAILED; then
      printf "\n"
    fi
  ;;

  restart)
    FAILED="true"
    for WORLD in `getworlds "$2"`; do
      if $FAILED; then
        printf "Restarting world: "
        FAILED="false"
      fi
      printf "$WORLD "
      if ! stop "$WORLD"; then
        FAILED="true"
      fi
      if ! $FAILED; then
        if ! start "$WORLD"; then
          FAILED="true"
        fi
      fi
    done
    if ! $FAILED; then
      printf "\n"
    fi
  ;;

  update)
    FAILED="false"
    if ! "$0" stop; then
      FAILED="true"
    fi
    if ! $FAILED; then
      printf "Updating server..."
      if ! update; then
        FAILED="true"
      fi
    fi
    if ! $FAILED; then
      printf "\n"
      "$0" start
    fi
  ;;

  create)
    if [ -z "$2" ]; then
      echo "Enter a name for the new world"
      exit 1
    fi
    if [[ "$3" != "1" && "$3" != "2" && "$3" != "3" ]]; then
      echo "Enter a valid size for the new world (1, 2, 3)"
      exit 1
    fi
    if [[ "$4" != "0" && "$4" != "1" ]]; then
      echo "Enter a valid difficulty for the new world (0, 1)"
      exit 1
    fi
    PORT="$5"
    if [ -z "$PORT" ]; then
      PORT="7777"
    fi

    FAILED="false"
    printf "Creating world: $2"
    if ! create "$2" "$3" "$4" "$PORT"; then
      FAILED="true"
    fi
    if ! $FAILED; then
      printf "\n"
    fi
  ;;

esac
exit 0
