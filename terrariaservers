#!/bin/bash

SERVERDIR="./servers"

errecho() {
  echo "$@" 1>&2;
}

error() {
  printf "\n"
  errecho "  $1"
}

start() {
  if [ ! -d "$SERVERDIR/$1" ]; then
    error "Server not found"
    return 1
  fi
  return 0
}

stop() {
  return 0
}

update() {
  if [ ! -d "$SERVERDIR/$1" ]; then
    error "Server not found"
    return 1
  fi
  return 0
}

create() {
  if [ -e "$SERVERDIR/$1" ]; then
    error "Server already exists"
    return 1
  fi

  mkdir -p "$SERVERDIR/$1"
  cp "defaultserverconfig.txt" "$SERVERDIR/$1/serverconfig.txt"
  sed -i "s/^\s*#*\s*\(autocreate\s*=\s*\).*$/\1$2/" "$SERVERDIR/$1/serverconfig.txt"
  sed -i "s/^\s*#*\s*\(difficulty\s*=\s*\).*$/\1$3/" "$SERVERDIR/$1/serverconfig.txt"
  sed -i "s/^\s*#*\s*\(port\s*=\s*\).*$/\1$4/" "$SERVERDIR/$1/serverconfig.txt"
  update "$1"
  return $?
}

getservers() {
  if [ -z "$1" ]; then
    ls $SERVERDIR
  else
    echo "$1"
  fi
}

case "$1" in

  start)
    FAILED="true"
    for SERVER in `getservers "$2"`; do
      if $FAILED; then
        printf "Starting server: "
        FAILED="false"
      fi
      printf "$SERVER "
      if ! start "$SERVER"; then
        FAILED="true"
      fi
    done
    if ! $FAILED; then
      printf "\n"
    fi
  ;;

  stop)
    FAILED="true"
    for SERVER in `getservers "$2"`; do
      if $FAILED; then
        printf "Stopping server: "
        FAILED="false"
      fi
      printf "$SERVER "
      if ! stop "$SERVER"; then
        FAILED="true"
      fi
    done
    if ! $FAILED; then
      printf "\n"
    fi
  ;;

  restart)
    FAILED="true"
    for SERVER in `getservers "$2"`; do
      if $FAILED; then
        printf "Restarting server: "
        FAILED="false"
      fi
      printf "$SERVER "
      if ! stop "$SERVER"; then
        FAILED="true"
      fi
      if ! $FAILED; then
        if ! start "$SERVER"; then
          FAILED="true"
        fi
      fi
    done
    if ! $FAILED; then
      printf "\n"
    fi
  ;;

  update)
    FAILED="true"
    for SERVER in `getservers "$2"`; do
      if $FAILED; then
        printf "Updating server: "
        FAILED="false"
      fi
      printf "$SERVER "
      if ! update "$SERVER"; then
        FAILED="true"
      fi
    done
    if ! $FAILED; then
      printf "\n"
    fi
  ;;

  create)
    if [ -z "$2" ]; then
      echo "Enter a name for the new server"
      exit 1
    fi
    if [[ "$3" != "1" && "$3" != "2" && "$3" != "3" ]]; then
      echo "Enter a valid size for the new server (1, 2, 3)"
      exit 1
    fi
    if [[ "$4" != "0" && "$4" != "1" ]]; then
      echo "Enter a valid difficulty for the new server (0, 1)"
      exit 1
    fi
    PORT="$5"
    if [ -z "$PORT" ]; then
      PORT="7777"
    fi

    FAILED="false"
    printf "Creating server: $2"
    if ! create "$2" "$3" "$4" "$PORT"; then
      FAILED="true"
    fi
    if ! $FAILED; then
      printf "\n"
    fi
  ;;

esac
exit 0
