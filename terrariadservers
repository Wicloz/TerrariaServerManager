#!/bin/bash

MAINDIR="/opt/terraria"
WORLDDIR="$MAINDIR/worlds"
SERVERDIR="$MAINDIR/server"

error() {
  printf "\n"
  echo "  $1" 1>&2
}

isworldrunning() {
  (screen -list | grep -q "terraria-$1") &>/dev/null
  return $?
}

getworlds() {
  if [ -z "$1" ]; then
    ls "$WORLDDIR" 2>/dev/null
  else
    echo "$1"
  fi
}

start() {
  if [ ! -d "$WORLDDIR/$1" ]; then
    error "World not found"
    return 1
  fi

  if ! isworldrunning "$1"; then
    screen -dmS "terraria-$1" /bin/bash -c "\"$SERVERDIR/TerrariaServer.bin.x86_64\" -config \"$WORLDDIR/$1/serverconfig.txt\""
  fi
}

stop() {
  if isworldrunning "$1"; then
    send "$1" "exit"
    return $?
  fi
}

create() {
  if [ -e "$WORLDDIR/$1" ]; then
    error "World already exists"
    return 1
  fi

  mkdir -p "$WORLDDIR/$1"
  cp "$MAINDIR/defaultserverconfig.txt" "$WORLDDIR/$1/serverconfig.txt"
  sed -i "s|^\s*#*\s*\(world\s*=\s*\).*$|\1$WORLDDIR/$1/world.wld|" "$WORLDDIR/$1/serverconfig.txt"
  sed -i "s|^\s*#*\s*\(worldpath\s*=\s*\).*$|\1$WORLDDIR/$1/|" "$WORLDDIR/$1/serverconfig.txt"
  sed -i "s|^\s*#*\s*\(worldname\s*=\s*\).*$|\1$1|" "$WORLDDIR/$1/serverconfig.txt"
  sed -i "s|^\s*#*\s*\(autocreate\s*=\s*\).*$|\1$2|" "$WORLDDIR/$1/serverconfig.txt"
  sed -i "s|^\s*#*\s*\(difficulty\s*=\s*\).*$|\1$3|" "$WORLDDIR/$1/serverconfig.txt"
  sed -i "s|^\s*#*\s*\(port\s*=\s*\).*$|\1$4|" "$WORLDDIR/$1/serverconfig.txt"
}

send() {
  if ! isworldrunning "$1"; then
    error "World not running"
    return 1
  fi

  screen -S "terraria-$1" -X stuff "$2\r"
}

attach() {
  if ! isworldrunning "$1"; then
    error "World not running"
    return 1
  fi

  printf "\n  "
  script /dev/null -qc "screen -r \"terraria-$1\""
  return 1
}

update() {
  rm -rf "$SERVERDIR"
  DOWNLOAD=`curl -s "https://terraria.gamepedia.com/Server" | perl -pe 's/\n//' | sed 's|.*\(https*://terraria.org/server/.*\.zip\).*|\1|'`
  curl -so "$MAINDIR/server.zip" "$DOWNLOAD"
  unzip -q "$MAINDIR/server.zip" -d "$SERVERDIR.tmp"
  rm -f "$MAINDIR/server.zip"
  VERSIONFOLDER=`ls "$SERVERDIR.tmp"`
  mv "$SERVERDIR.tmp/$VERSIONFOLDER/Linux" "$SERVERDIR"
  rm -rf "$SERVERDIR.tmp"
  chmod +x "$SERVERDIR/TerrariaServer.bin.x86"
  chmod +x "$SERVERDIR/TerrariaServer.bin.x86_64"
}

case "$1" in

  start)
    FAILED="true"
    for WORLD in `getworlds "$2"`; do
      if $FAILED; then
        printf "Starting world: "
        FAILED="false"
      fi
      printf "$WORLD "
      if ! start "$WORLD"; then
        FAILED="true"
      fi
    done
    if ! $FAILED; then
      printf "\n"
    fi
  ;;

  stop)
    FAILED="true"
    for WORLD in `getworlds "$2"`; do
      if $FAILED; then
        printf "Stopping world: "
        FAILED="false"
      fi
      printf "$WORLD "
      if ! stop "$WORLD"; then
        FAILED="true"
      fi
    done
    if ! $FAILED; then
      printf "\n"
    fi
  ;;

  restart)
    FAILED="true"
    for WORLD in `getworlds "$2"`; do
      if $FAILED; then
        printf "Restarting world: "
        FAILED="false"
      fi
      printf "$WORLD "
      if ! stop "$WORLD"; then
        FAILED="true"
      fi
      if ! $FAILED; then
        if ! start "$WORLD"; then
          FAILED="true"
        fi
      fi
    done
    if ! $FAILED; then
      printf "\n"
    fi
  ;;

  send)
    if [ -z "$2" ]; then
      echo "Enter the world name to send to"
      exit 1
    fi
    if [ -z "$3" ]; then
      echo "Enter a command to send"
      exit 1
    fi

    FAILED="false"
    printf "Sending '${*:3}' to '$2'"
    if ! send "$2" "${*:3}"; then
      FAILED="true"
    fi
    if ! $FAILED; then
      printf "\n"
    fi
  ;;

  attach)
    if [ -z "$2" ]; then
      echo "Enter the world name to attach to"
      exit 1
    fi

    FAILED="false"
    printf "Attaching to '$2'"
    if ! attach "$2"; then
      FAILED="true"
    fi
    if ! $FAILED; then
      printf "\n"
    fi
  ;;

  create)
    if [ -z "$2" ]; then
      echo "Enter a name for the new world"
      exit 1
    fi
    if [[ "$3" != "1" && "$3" != "2" && "$3" != "3" ]]; then
      echo "Enter a valid size for the new world (1, 2, 3)"
      exit 1
    fi
    if [[ "$4" != "0" && "$4" != "1" ]]; then
      echo "Enter a valid difficulty for the new world (0, 1)"
      exit 1
    fi
    PORT="$5"
    if [ -z "$PORT" ]; then
      PORT="7777"
    fi

    FAILED="false"
    printf "Creating world: $2"
    if ! create "$2" "$3" "$4" "$PORT"; then
      FAILED="true"
    fi
    if ! $FAILED; then
      printf "\n"
    fi
  ;;

  update)
    FAILED="false"
    if ! "$0" stop; then
      FAILED="true"
    fi
    if ! $FAILED; then
      printf "Updating server..."
      if ! update; then
        FAILED="true"
      fi
    fi
    if ! $FAILED; then
      printf "\n"
      "$0" start
    fi
  ;;

esac
exit 0
